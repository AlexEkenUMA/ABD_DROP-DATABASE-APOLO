--EJERCICIO 4

CREATE OR REPLACE PACKAGE PK_OPERATIVA AS

    PROCEDURE INSERTAR_TRANSACCION (ID NUMBER, ORIGEN_IBAN VARCHAR2, DESTINO_IBAN
    VARCHAR2,DIVISA_1 VARCHAR2, DIVISA_2 VARCHAR2, CANTIDAD NUMBER, TIPO VARCHAR, INTERNACIONAL CHAR, 
    COMISION NUMBER, FECHA_INSTRUC DATE);
    
    PROCEDURE CAMBIO_DIVISAS (IBAN VARCHAR2, DIVISA1 VARCHAR2, DIVISA2 VARCHAR2, CANTIDAD NUMBER);
    
    --EXEPCIONES
    
    CUENTA_NO_ENCONTRADA    EXCEPTION;
    CANTIDAD_ERRONEA        EXCEPTION;
    DIVISAS_IGUALES         EXCEPTION;
    DIVISA_NO_ENCONTRADA    EXCEPTION;
    DIVISAS_NO_COINCIDENTES EXCEPTION;
    
    
END PK_OPERATIVA;

/


CREATE OR REPLACE PACKAGE BODY PK_OPERATIVA AS
    PROCEDURE INSERTAR_TRANSACCION (ID NUMBER, ORIGEN_IBAN VARCHAR2, DESTINO_IBAN VARCHAR2,
    DIVISA_1 VARCHAR2, DIVISA_2 VARCHAR2, CANTIDAD NUMBER, TIPO VARCHAR, INTERNACIONAL CHAR, 
    COMISION NUMBER, FECHA_INSTRUC DATE)
    IS
    FILA_CUENTA1 VARCHAR2(50);
    FILA_CUENTA2 VARCHAR2(50);
    TIPO_CUENTA1 VARCHAR2(50);
    TIPO_CUENTA2 VARCHAR2(50);
    ES_REFERENCIA VARCHAR2(50);
    
    REFERENCIA1 VARCHAR2(50);
    REFERENCIA2 VARCHAR2(50);
    
    DIVISA_ORIGEN VARCHAR2(50);
    DIVISA_DESTINO VARCHAR2(50);
  
    
    --COMPROBAR EXCEPCION DE SALDO SUFICIENTE
    
    BEGIN
        SELECT COUNT(*) INTO FILA_CUENTA1 FROM FINTECH
        WHERE IBAN = ORIGEN_IBAN AND ESTADO = 'ACTIVA';
        
        SELECT COUNT(*) INTO FILA_CUENTA2 FROM CUENTA  --DEBERIA BUSCAR EN CUENTA ¿??¿¿
        WHERE IBAN = DESTINO_IBAN;
    
        IF FILA_CUENTA1 LIKE '0' OR FILA_CUENTA2 LIKE '0' THEN
            RAISE CUENTA_NO_ENCONTRADA;
        END IF;
        
        IF CANTIDAD <= 0 THEN
            RAISE CANTIDAD_ERRONEA;
        END IF;
        
        SELECT CLASIFICACION INTO TIPO_CUENTA1 FROM FINTECH
        WHERE IBAN = ORIGEN_IBAN;
        
        IF TIPO_CUENTA1 LIKE 'SEGREGADA' THEN
            
            UPDATE REFERENCIA
            SET SALDO = SALDO-CANTIDAD 
            WHERE IBAN = (SELECT IBAN_CUENTAREF FROM SEGREGADA WHERE IBAN = ORIGEN_IBAN);
        
        END IF;
        
        IF TIPO_CUENTA1 LIKE 'POOLED' THEN 
        
            SELECT R.IBAN INTO REFERENCIA1 FROM DEPOSITADA_EN D, REFERENCIA R
            WHERE D.POOLED_ACCOUNT_IBAN = ORIGEN_IBAN AND D.REFERENCIA_IBAN = R.IBAN AND R.DIVISA_ABREVIATURA = DIVISA_1;
            
            UPDATE DEPOSITADA_EN D
            SET SALDO = SALDO - CANTIDAD
            WHERE D.POOLED_ACCOUNT_IBAN = ORIGEN_IBAN AND D.REFERENCIA_IBAN = REFERENCIA1;
        
            UPDATE REFERENCIA R 
            SET SALDO = SALDO - CANTIDAD
            WHERE R.IBAN = REFERENCIA1;
        
        END IF;
        
        SELECT COUNT(*) INTO ES_REFERENCIA FROM FINTECH
        WHERE IBAN = DESTINO_IBAN;
        
        IF ES_REFERENCIA LIKE '0' THEN
            UPDATE REFERENCIA 
            SET SALDO = SALDO + CANTIDAD
            WHERE IBAN = DESTINO_IBAN;
        END IF;
        
        SELECT FINTECH.CLASIFICACION INTO TIPO_CUENTA2 FROM FINTECH
        WHERE IBAN = DESTINO_IBAN;
        
     
        IF TIPO_CUENTA2 LIKE 'SEGREGADA' THEN
        
            UPDATE REFERENCIA
            SET SALDO = SALDO+CANTIDAD
            WHERE IBAN = (SELECT IBAN_CUENTAREF FROM SEGREGADA WHERE IBAN = DESTINO_IBAN);
        
        END IF;
        
        IF TIPO_CUENTA2 LIKE 'POOLED' THEN
            
            SELECT R.IBAN INTO REFERENCIA2 FROM DEPOSITADA_EN D, REFERENCIA R
            WHERE D.POOLED_ACCOUNT_IBAN = ORIGEN_IBAN AND D.REFERENCIA_IBAN = R.IBAN AND R.DIVISA_ABREVIATURA = DIVISA_2;
            
            UPDATE DEPOSITADA_EN D
            SET SALDO = SALDO + CANTIDAD
            WHERE D.POOLED_ACCOUNT_IBAN = ORIGEN_IBAN AND D.REFERENCIA_IBAN = REFERENCIA2;
        
            UPDATE REFERENCIA R 
            SET SALDO = SALDO + CANTIDAD
            WHERE R.IBAN = REFERENCIA2;
          
        END IF;
        

        INSERT INTO TRANSACCION VALUES (ID, FECHA_INSTRUC, CANTIDAD, SYSDATE, TIPO, COMISION, INTERNACIONAL, ORIGEN_IBAN, DESTINO_IBAN, DIVISA_1, DIVISA_2);
        
        COMMIT;
             
        EXCEPTION
            WHEN CUENTA_NO_ENCONTRADA THEN
                INSERT INTO LOG_ERRORES VALUES ('CUENTA_NO_ENCONTRADA', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                INSERTAR AUTORIZACIÓN EN PK_OPERATIVA: CUENTA NO ENCONTRADA',
                SYSDATE);
                COMMIT;
                RAISE CUENTA_NO_ENCONTRADA;
                
            WHEN CANTIDAD_ERRONEA THEN
                INSERT INTO LOG_ERRORES VALUES ('CANTIDAD_ERRONEA', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                INSERTAR AUTORIZACIÓN EN PK_OPERATIVA: CANTIDAD ERRÓENA',
                SYSDATE);
                COMMIT;
                RAISE CANTIDAD_ERRONEA;
                
             WHEN OTHERS THEN
                ROLLBACK;
                INSERT INTO LOG_ERRORES VALUES ('OTHERS', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                INSERTAR AUTORIZACIÓN EN PK_OPERATIVA',
                SYSDATE);
                COMMIT;
                RAISE ;
            
    
    END;
    
    
    PROCEDURE CAMBIO_DIVISAS (IBAN VARCHAR2, DIVISA1 VARCHAR2, DIVISA2 VARCHAR2, CANTIDAD NUMBER)
    IS 
    
    CUENTA VARCHAR2(50);
    DIVISA_O VARCHAR2(50);
    DIVISA_D VARCHAR2(50);
    REFERENCIA1 VARCHAR2(50);
    REFERENCIA2 VARCHAR2(50);
    VALOR_DIVISA1 NUMBER;
    VALOR_DIVISA2 NUMBER;

    
    BEGIN
   
    
    SELECT COUNT(*) INTO CUENTA FROM POOLED_ACCOUNT P
    WHERE P.IBAN = IBAN; 
    
    IF CUENTA LIKE '0' THEN
        RAISE CUENTA_NO_ENCONTRADA;
    END IF;
    
    SELECT COUNT(*) INTO DIVISA_O FROM DIVISA
    WHERE ABREVIATURA = DIVISA1;
    
    SELECT COUNT(*) INTO DIVISA_D FROM DIVISA
    WHERE ABREVIATURA = DIVISA2;
    
    IF DIVISA_O LIKE '0' OR DIVISA_D LIKE '0' THEN
        RAISE DIVISA_NO_ENCONTRADA;
    END IF;
    
    IF DIVISA1 LIKE DIVISA2 THEN
        RAISE DIVISAS_IGUALES;
    END IF;
    
    --ORIGEN
    
    SELECT R.IBAN INTO REFERENCIA1 FROM DEPOSITADA_EN D, REFERENCIA R
    WHERE D.POOLED_ACCOUNT_IBAN = IBAN AND R.IBAN = D.REFERENCIA_IBAN AND R.DIVISA_ABREVIATURA = DIVISA1;
    
    UPDATE DEPOSITADA_EN D
    SET SALDO = SALDO - CANTIDAD
    WHERE D.POOLED_ACCOUNT_IBAN = IBAN AND D.REFERENCIA_IBAN = REFERENCIA1;
    
    UPDATE REFERENCIA R
    SET SALDO = SALDO - CANTIDAD
    WHERE R.IBAN = IBAN;
    
    --DESTINO
    
    SELECT R.IBAN INTO REFERENCIA2 FROM DEPOSITADA_EN D, REFERENCIA R
    WHERE D.POOLED_ACCOUNT_IBAN = IBAN AND R.IBAN = D.REFERENCIA_IBAN AND R.DIVISA_ABREVIATURA = DIVISA2;
    
    SELECT DIVISA.CAMBIOEURO INTO VALOR_DIVISA1 FROM DIVISA
    WHERE DIVISA.ABREVIATURA = DIVISA1;
    
    SELECT DIVISA.CAMBIOEURO INTO VALOR_DIVISA2 FROM DIVISA
    WHERE DIVISA.ABREVIATURA = DIVISA2;
    
    
    UPDATE DEPOSITADA_EN D
    SET SALDO = SALDO + (CANTIDAD * VALOR_DIVISA1 / VALOR_DIVISA2)
    WHERE D.POOLED_ACCOUNT_IBAN = IBAN AND D.REFERENCIA_IBAN = REFERENCIA2;
    
    UPDATE REFERENCIA R
    SET SALDO = SALDO + (CANTIDAD * VALOR_DIVISA1 / VALOR_DIVISA2)
    WHERE R.IBAN = REFERENCIA2;
    
    COMMIT;
    
      EXCEPTION
            WHEN CUENTA_NO_ENCONTRADA THEN
                INSERT INTO LOG_ERRORES VALUES ('CUENTA_NO_ENCONTRADA', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                CAMBIO DIVISAS EN PK_OPERATIVA: CUENTA NO ENCONTRADA',
                SYSDATE);
                COMMIT;
                RAISE CUENTA_NO_ENCONTRADA;
                
            WHEN DIVISA_NO_ENCONTRADA THEN
                INSERT INTO LOG_ERRORES VALUES ('DIVISA_NO_ENCONTRADA', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                CAMBIO DIVISAS EN PK_OPERATIVA: DIVISA NO ENCONTRADA',
                SYSDATE);
                COMMIT;
                RAISE DIVISA_NO_ENCONTRADA;
                
            WHEN DIVISAS_IGUALES THEN
                INSERT INTO LOG_ERRORES VALUES ('DIVISAS_IGUALES', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                CAMBIO DIVISAS EN PK_OPERATIVA: DIVISAS IGUALES',
                SYSDATE);
                COMMIT;
                RAISE DIVISA_NO_ENCONTRADA;
                
            WHEN OTHERS THEN
                ROLLBACK;
                INSERT INTO LOG_ERRORES VALUES ('OTHER', 'EXECEPCION DURANTE LA EJECUCIÓN DE
                CAMBIO DIVISAS EN PK_OPERATIVA',
                SYSDATE);
                COMMIT;
                RAISE ;
    END;
    
END PK_OPERATIVA;
/





